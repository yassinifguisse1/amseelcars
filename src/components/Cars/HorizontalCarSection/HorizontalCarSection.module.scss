.horizontalSection {
  position: relative;
  width: 100vw;
  height: 100vh;
  background: #000;
  overflow: hidden;
  
  // Allow scrolling for grid layouts
  &.gridMode {
    height: auto !important;
    min-height: 100vh;
    overflow: visible !important;
  }
  
  // Ensure non-grid mode keeps 100vh
  &:not(.gridMode) {
    height: 100vh;
  }
}

.container {
  position: relative;
  width: 100%;
  width: 100vw;
  padding: 0 3vw;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: flex-start;
  
  // Default height for non-grid mode
  &:not(.gridMode) {
    height: 100vh;
  }
  
  // For grid mode, adjust container
  .gridMode & {
    height: auto;
    min-height: 100vh;
    padding: 0;
  }
}

.sectionHeader {
  position: absolute;
  top: 10vh;
  left: 5vw;
  z-index: 10;
  color: white;
 
  
}

.sectionTitle {
  font-size: clamp(2.5rem, 5vw, 4rem);
  font-weight: 900;
  letter-spacing: -0.02em;
  line-height: 1;
  margin-bottom: 1rem;
  background: linear-gradient(135deg, #fff 0%, #3b82f6 100%);
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
  background-clip: text;
  
}

.sectionSubtitle {
  font-size: clamp(1rem, 2vw, 1.5rem);
  font-weight: 300;
  letter-spacing: 0.1em;
  opacity: 0.8;
  text-transform: uppercase;
}

.rowContainer {
  width: 100%;
  height: 90%;
  display: flex;
  align-items: center;

//   overflow: hidden;
  position: relative; // for edge-fade overlay
  --edge-fade: 80px; // default fade width

  // Fade out cards near left/right edges
  -webkit-mask-image: linear-gradient(
    to right,
    rgba(0, 0, 0, 0) 0,
    rgba(0, 0, 0, 1) var(--edge-fade),
    rgba(0, 0, 0, 1) calc(100% - var(--edge-fade)),
    rgba(0, 0, 0, 0) 100%
  );
  mask-image: linear-gradient(
    to right,
    rgba(0, 0, 0, 0) 0,
    rgba(0, 0, 0, 1) var(--edge-fade),
    rgba(0, 0, 0, 1) calc(100% - var(--edge-fade)),
    rgba(0, 0, 0, 0) 100%
  );
}

// Fallback overlay only if mask-image isnâ€™t supported
@supports not ((-webkit-mask-image: linear-gradient(black, white)) or (mask-image: linear-gradient(black, white))) {
  .rowContainer::after {
    content: '';
    position: absolute;
    inset: 0;
    pointer-events: none;
    background: linear-gradient(
      to right,
      rgba(0, 0, 0, 0.6) 0,
      rgba(0, 0, 0, 0) var(--edge-fade),
      rgba(0, 0, 0, 0) calc(100% - var(--edge-fade)),
      rgba(0, 0, 0, 0.6) 100%
    );
    z-index: 2;
  }
}

.cardsContainer {
  display: flex;
  align-items: center;
  height: 100%;
  width: max-content;
  // padding-top: 5vw;
  // padding-bottom: 5vw; // Remove padding to avoid blanks
  perspective: 1000px;
}

.cardsContainerReverse {
  // Initial position will be set by GSAP, no need for CSS transform
  // padding-top: 1vw;
  // padding-bottom: 1vw;
  display: flex;
  align-items: center;
  height: 100%;
  width: max-content;
  perspective: 1000px;
}

.cardWrapper {
  flex-shrink: 0;
  width: 420px; // Default desktop width
  transform-style: preserve-3d;
  transition: transform 0.3s ease;
  margin-right: 2rem; // Use margin instead of gap for better control
  // margin-top: 1.5rem;
  &:last-child {
    margin-right: 0; // Remove margin from last card
  }
  
  // Only apply hover effects on non-touch devices
  @media (hover: hover) and (pointer: fine) {
    &:hover {
      transform: translateY(-10px) rotateY(5deg);
      z-index: 100;
    }
  }
  
  // Touch device interactions
  @media (hover: none) and (pointer: coarse) {
    &:active {
      transform: translateY(-5px) scale(0.98);
    }
  }
  
  // 3D hover effects for individual cards
  &:nth-child(odd) {
    animation: float 6s ease-in-out infinite;
  }
  
  &:nth-child(even) {
    animation: float 6s ease-in-out infinite reverse;
  }
}

@keyframes float {
  0%, 100% {
    transform: translateY(0px) rotateX(0deg);
  }
  50% {
    transform: translateY(-5px) rotateX(2deg);
  }
}
@media (max-width: 1920px) {

  .rowContainer {
   --edge-fade: 28px;
  }
 
  .cardsContainerReverse {
    // Initial position will be set by GSAP, no need for CSS transform
    // padding-top: 10vw;
    // padding-bottom: 10vw;
    display: flex;
    align-items: center;
    height: 100%;
    width: max-content;
    perspective: 1000px;
  }
 
  .cardWrapper {
    width: 250px;
    margin-right: 1.5rem;
    
   
   
    
    &:last-child {
      margin-right: 0;
     
    }
  }
 
}

// Responsive design
@media (max-width: 1200px) {
  .cardWrapper {
    width: 260px;
    margin-right: 1.8rem;
  }
  
  
}

@media (max-width: 1024px) {
//   .container {
//     // padding: 0 5vw;
//   }
  .rowContainer { 
    --edge-fade: 48px; 

  }
 
  
  .sectionHeader {
    left: 3vw;
  }
  
  .cardsContainer {
    padding-top: 2vw;
    padding-bottom: 2vw; 
  }
  
  .cardWrapper {
    width: 250px;
    margin-right: 1.5rem;
    
    &:last-child {
      margin-right: 0;
    }
  }
}

@media (max-width: 768px) {
  .horizontalSection {
    height: 120vh; // Taller for better mobile experience
  }
.cardWrapper {
  width: 200px;
  margin-right: 1rem;
}  
  .sectionHeader {
    top: 8vh;
    left: 4vw;
  }
  .rowContainer { 
    --edge-fade: 32px;
    height: 45%; // Adjust row height for tablets
  
    
  }

 
  
  .cardsContainer {
    padding-top: 2vw;
    padding-bottom: 2vw; 
    
  }
  
  .cardWrapper {
    width: 200px; // Much larger for tablets
    margin-right: 1.2rem;
    
    &:last-child {
      margin-right: 0;
    }
    
    @media (hover: hover) and (pointer: fine) {
      &:hover {
        transform: translateY(-5px) rotateY(2deg);
      }
    }
    
    @media (hover: none) and (pointer: coarse) {
      &:active {
        transform: translateY(-3px) scale(0.98);
      }
    }
  }
}

@media (max-width: 640px) {
  .horizontalSection {
    height: 140vh; // Optimized height for mobile
  
  }
  
  .rowContainer { 
    --edge-fade: 28px;
    height: 56%; // Smaller row height to fit both rows

   
  }
  
  .cardWrapper {
    width: 200px; // Good size for small screens
    margin-right: 1rem;
    
    &:last-child {
      margin-right: 0;
    }
  }
}

@media (max-width: 480px) {
//   .container {
//     // padding: 0vw;
//   }


.rowContainer { 
  --edge-fade: 28px;
  height: 46%; // Smaller row height to fit both rows
 
}
  .rowContainer { 
    --edge-fade: 24px;
    // height: 38%; // Optimize for mobile

  }
  
  .sectionHeader {
    top: 6vh;
    left: 2vw;
  }
  
  .cardsContainer {
    padding-top: 2vw;
  padding-bottom: 2vw;
  }
  
  .cardWrapper {
    width: 200px; // Optimal for mobile phones
    margin-right: 0.8rem;
    
    &:last-child {
      margin-right: 0;
    }
    
    @media (hover: hover) and (pointer: fine) {
      &:hover {
        transform: translateY(-3px) rotateY(1deg);
      }
    }
    
    @media (hover: none) and (pointer: coarse) {
      &:active {
        transform: translateY(-2px) scale(0.98);
      }
    }
  }
}

@media (max-width: 375px) {
  .cardWrapper {
    width: 200px; // Still decent size for very small screens
    margin-right: 0.6rem;
  }
  
  .rowContainer { 
    --edge-fade: 20px;
    height: 56%;
    // padding-top: 3vw;
    // padding-bottom: 3vw;
   

  }
}

// Add subtle background effects
.horizontalSection::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  pointer-events: none;
  z-index: 1;
}

// Loading shimmer effect
.cardWrapper::after {
  content: '';
  position: absolute;
  top: 0;
  left: -100%;
  width: 100%;
  height: 100%;
  
  animation: shimmer 3s infinite;
  pointer-events: none;
}

@keyframes shimmer {
  0% {
    left: -100%;
  }
  100% {
    left: 100%;
  }
} 
// Grid layout for short height screens (no animations)
.gridContainer {
  width: 100%;
  height: auto;
  min-height: 100vh;
  padding: 2rem;
  overflow: visible;
  position: relative;
  z-index: 1;
}

.gridLayout {
  display: grid;
  gap: 1rem;
  width: 100%;
  max-width: 1400px;
  margin: 0 auto;
  padding: 1rem 0;
  min-height: calc(100vh - 4rem); // Ensure enough height for scrolling
}

.gridCard {
  width: 100%;
  transform: none !important; // Override any GSAP transforms
  opacity: 1 !important; // Ensure visibility
}

// Height-specific grid configurations
.grid-ultra-short {
  // 500px and below: 4 columns, compact
  grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
  gap: 0.8rem;
  
  .gridCard {
    max-width: 320px;
  }
}

.grid-very-short {
  // 600px: 3-4 columns
  grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
  gap: 1rem;
  
  .gridCard {
    max-width: 350px;
  }
}

.grid-short {
  // 700px and 800px: 3 columns, more space
  grid-template-columns: repeat(auto-fit, minmax(320px, 1fr));
  gap: 1.2rem;
  
  .gridCard {
    max-width: 380px;
  }
}

// Responsive height-based layouts (for animated layouts)
.singleRowLayout {
  height: 100% !important;
  justify-content: center;
  
  &[data-height-category="ultra-short"] {
    height: 90% !important;
    
    .cardWrapper {
      width: 180px;
      margin-right: 0.8rem;
    }
  }
  
  &[data-height-category="very-short"] {
    height: 95% !important;
    
    .cardWrapper {
      width: 200px;
      margin-right: 1rem;
    }
  }
}

.twoRowLayout {
  &[data-height-category="short"] {
    height: 40% !important; // Reduced height for short screens
    
    .cardWrapper {
      width: 220px;
      margin-right: 1rem;
    }
  }
  
  &[data-height-category="very-short"] {
    height: 45% !important;
    
    .cardWrapper {
      width: 200px;
      margin-right: 0.8rem;
    }
  }
}

// Height-specific media queries
@media (max-height: 500px) {
  .horizontalSection:not(.gridMode) {
    height: 100vh;
  }
  
  .gridContainer {
    height: auto;
    min-height: 100vh;
    overflow: visible;
  }
  
  .rowContainer {
    height: 90% !important;
  }
  
  .cardWrapper {
    width: 160px !important;
    margin-right: 0.6rem !important;
  }
}

@media (max-height: 600px) and (min-width: 769px) {
  .horizontalSection:not(.gridMode) {
    height: 100vh;
  }
  
  .singleRowLayout {
    height: 85% !important;
  }
  
  .twoRowLayout {
    height: 42% !important;
  }
}

@media (max-height: 700px) {
  .horizontalSection:not(.gridMode) {
    height: 100vh;
  }
  
  .singleRowLayout {
    height: 90% !important;
  }
  
  .cardWrapper {
    width: 200px !important;
    margin-right: 0.8rem !important;
  }
}

// Grid responsive breakpoints
@media (max-width: 768px) {
  .gridLayout {
    padding: 0.5rem;
  }
  
  .grid-ultra-short {
    grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
    gap: 0.6rem;
  }
  
  .grid-very-short {
    grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
    gap: 0.8rem;
  }
  
  .grid-short {
    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
    gap: 1rem;
  }
  
  .gridContainer {
    padding: 1rem;
  }
}

@media (max-width: 480px) {
  .grid-ultra-short,
  .grid-very-short,
  .grid-short {
    grid-template-columns: 1fr 1fr; // Always 2 columns on mobile
    gap: 0.5rem;
  }
  
  .gridContainer {
    padding: 0.5rem;
  }
}

@media (max-height: 800px) {
  .gridContainer {
    height: auto;
    min-height: 100vh;
    padding: 1rem;
  }
}

@media (max-height: 700px) {
  .gridContainer {
    padding: 0.8rem;
  }
}

@media (max-height: 600px) {
  .gridContainer {
    padding: 0.6rem;
    height: auto;
    min-height: 100vh;
    overflow: visible;
  }
  
  .gridLayout {
    gap: 0.8rem;
    min-height: calc(100vh - 1.2rem);
  }
}

@media (max-height: 500px) {
  .gridContainer {
    padding: 0.5rem;
    height: auto;
    min-height: 100vh;
    overflow: visible;
  }
  
  .gridLayout {
    gap: 0.6rem;
    padding: 0.5rem 0;
    min-height: calc(100vh - 1rem);
  }
}

// Ensure grid is always scrollable for short heights
@media (max-height: 800px) {
  .gridMode {
    .horizontalSection {
      overflow: visible !important;
      height: auto !important;
    }
    
    .container {
      height: auto !important;
      min-height: 100vh;
    }
  }
}

